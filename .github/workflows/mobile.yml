name: Mobile
on:
 push:
    branches: mobile
 workflow_dispatch:

 workflow_call:
    inputs:
      buildFlags:
        required: false
        type: string

jobs:
  Mobile:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-15]
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: 'mobile'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Setup Android NDK
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cd ${{ runner.temp }}
          echo "Downloading Android NDK r27c..."
          curl -sSfL -o android-ndk.zip "https://dl.google.com/android/repository/android-ndk-r27c-linux.zip"
          echo "Extracting Android NDK r27c..."
          unzip -qq android-ndk.zip
          echo "NDK r27c successfully downloaded and extracted!"

      - name: Install Libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Configure Android
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT ${{ runner.temp }}/android-ndk-r27c
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile (Android)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build android -D ${{ inputs.buildFlags }}

      - name: Compile (iOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build ios -nosign -D ${{ inputs.buildFlags }}

      - name: Make Ipa
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install ldid
          cd export/release/ios/build/Release-iphoneos/JSEngine.app
          ldid -S../../../JSEngine/JSEngine.entitlements JSEngine
          cd ..
          mkdir Payload
          mv JSEngine.app Payload
          zip -r JSEngine.ipa Payload

      - name: Upload Artifact (Android)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload Artifact (iOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
